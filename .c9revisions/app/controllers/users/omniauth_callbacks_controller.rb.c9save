{"ts":1367858358827,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1367858366208,"patch":[[{"diffs":[[1,"class Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController\r\nend"]],"start1":0,"start2":0,"length1":0,"length2":83}]],"length":83,"saved":false}
{"ts":1367858445395,"patch":[[{"diffs":[[0,"roller\r\n"],[1,"  def facebook\r\n    # You need to implement the method below in your model (e.g. app/models/user.rb)\r\n    @user = User.find_for_facebook_oauth(request.env[\"omniauth.auth\"], current_user)\r\n\r\n    if @user.persisted?\r\n      sign_in_and_redirect @user, :event => :authentication #this will throw if @user is not activated\r\n      set_flash_message(:notice, :success, :kind => \"Facebook\") if is_navigational_format?\r\n    else\r\n      session[\"devise.facebook_data\"] = request.env[\"omniauth.auth\"]\r\n      redirect_to new_user_registration_url\r\n    end\r\n  end\r\n"],[0,"end"]],"start1":72,"start2":72,"length1":11,"length2":563}]],"length":635,"saved":false}
{"contributors":[],"silentsave":false,"ts":1367868088229,"patch":[[{"diffs":[[0,"    "],[-1,"# You need to implement the method below in your model (e.g. app/models/user.rb)"],[1,"omniauth = request.env['omniauth.auth']"],[0,"\r\n  "]],"start1":96,"start2":96,"length1":88,"length2":47},{"diffs":[[0,"ser."],[-1,"f"],[0,"in"],[-1,"d_for_facebook_oauth(request.env[\"omniauth.auth\"], current_user)\r\n"],[1,"cludes(:authentications).merge(Authentication.where(:provider => omniauth['provider'], :uid => omniauth['uid'])).first\r\n \r\n    if @user # if user exists and has used this authentication before, update details and sign in"],[0,"\r\n    "],[-1,"if"],[1," "],[0," @user."],[-1,"persisted?"],[1,"set_token_from_hash(provider_auth_hash(kind, omniauth), provider_user_hash(kind, omniauth))"],[0,"\r\n  "]],"start1":154,"start2":154,"length1":102,"length2":335},{"diffs":[[0,"tion"],[-1," #this will throw"],[1,"\r\n    elsif current_user #"],[0," if "],[-1,"@"],[0,"user "],[-1,"is not activated\r\n      set_flash_message(:notice, :success, :kind => \"Facebook\") if is_navigational_format?\r\n    else\r\n      session[\"devise.facebook_data\"] = request.env[\"omniauth.auth\"]\r\n"],[1,"exists then new authentication is being added - so update details and redirect to \r\n      current_user.set_token_from_hash(provider_auth_hash(kind, omniauth), provider_user_hash(kind, omniauth))\r\n      redirect_to edit_user_registration_url\r\n    else # create new user and new authentication\r\n      user = User.new\r\n      user.password = Devise.friendly_token[0,20]\r\n      user.authentications.build(provider_auth_hash(kind, omniauth))     \r\n      if user.save :validate => false # validate false handles cases where email not provided - such as Twitter\r\n        sign_in_and_redirect(:user, user)\r\n      else # validate false above makes it almost impossible to get here\r\n        session[\"devise.#{kind.downcase}_data\"] = provider_auth_hash(kind,omniauth).merge(provider_user_hash(kind,omniauth))\r\n  "],[0,"    "]],"start1":542,"start2":542,"length1":225,"length2":843},{"diffs":[[0,"ration_url\r\n"],[1,"      end\r\n"],[0,"    end\r\n  e"]],"start1":1414,"start2":1414,"length1":24,"length2":35}]],"length":1456,"saved":false}
{"ts":1367868114599,"patch":[[{"diffs":[[0,"vider_auth_hash("],[-1,"kind"],[1,"\"Facebook\""],[0,", omniauth))    "]],"start1":984,"start2":984,"length1":36,"length2":42}]],"length":1462,"saved":false}
{"ts":1367868133440,"patch":[[{"diffs":[[0,"ise."],[-1,"#{kind.downcase}"],[1,"facebook"],[0,"_dat"]],"start1":1279,"start2":1279,"length1":24,"length2":16}]],"length":1454,"saved":false}
{"ts":1367868144585,"patch":[[{"diffs":[[0,"r_auth_hash("],[-1,"kind"],[1,"\"Facebook\""],[0,",omniauth).m"]],"start1":1308,"start2":1308,"length1":28,"length2":34},{"diffs":[[0,"er_hash("],[-1,"kind"],[1,"\"Facebook\""],[0,",omniaut"]],"start1":1358,"start2":1358,"length1":20,"length2":26}]],"length":1466,"saved":false}
{"ts":1367868202932,"patch":[[{"diffs":[[0,"\n  end\r\n"],[1,"  \r\n  def provider_auth_hash(provider, hash)\r\n  # Create provider specific hash's to populate authentication record \r\n    :provider => hash['provider'],\r\n    :uid => hash['uid'],\r\n    :name => hash['extra']['user_hash']['name'],\r\n    :link => hash['extra']['user_hash']['link'],\r\n    :token => hash['credentials']['token'],\r\n    :secret => nil\r\n  end\r\n \r\n  def provider_user_hash(provider, hash)\r\n  # Create provider specific hash's to populate user record if appropriate\r\n    case provider\r\n    when \"Facebook\"\r\n      {\r\n        :name => hash['extra']['user_hash']['name'],\r\n        :email => hash['extra']['user_hash']['email']\r\n      }\r\n    when \"Twitter\"\r\n      {\r\n        :name => hash['user_info']['name']\r\n      }\r\n    end\r\n  end\r\n"],[0,"end"]],"start1":1455,"start2":1455,"length1":11,"length2":749}]],"length":2204,"saved":false}
{"ts":1367868225257,"patch":[[{"diffs":[[0,"te\r\n"],[-1,"    case provider\r\n    when \"Facebook\"\r\n      {\r\n    "],[0,"    "]],"start1":1932,"start2":1932,"length1":61,"length2":8},{"diffs":[[0,"],\r\n    "],[-1,"  "],[-1,"  "],[0,":email ="]],"start1":1982,"start2":1982,"length1":20,"length2":16},{"diffs":[[0,"']\r\n"],[-1,"      }\r\n    when \"Twitter\"\r\n      {\r\n        :name => hash['user_info']['name']\r\n      }\r\n    end\r\n"],[0,"  en"]],"start1":2033,"start2":2033,"length1":108,"length2":8}]],"length":2047,"saved":false}
{"contributors":[],"silentsave":false,"ts":1367871720094,"patch":[[{"diffs":[[0,"\n  end\r\n"],[1,"  \r\n  def passthru\r\n    render :file => \"#{Rails.root}/public/404.html\", :status => 404, :layout => false\r\n    # Or alternatively,\r\n    # raise ActionController::RoutingError.new('Not Found')\r\n  end\r\n"],[0,"end"]],"start1":2036,"start2":2036,"length1":11,"length2":211}]],"length":2247,"saved":false}
